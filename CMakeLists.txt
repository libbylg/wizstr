cmake_minimum_required(VERSION 3.24)
project(str LANGUAGES CXX)

#   Setup the global settings
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_VERBOSE_MAKEFILE ON)

list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/include/str.hpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/src/str.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/testing.hpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/testing.cpp)
############################################################################################
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_align_center.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_align_center_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_align_left.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_align_left_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_align_right.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_align_right_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_align_zfill.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_align_zfill_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_append.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_append_inplace.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_base16.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_base64.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_to_capitalize.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_contains.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_icontains.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_count.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_dirname_basename.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_drop.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_drop_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_drop_left.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_drop_left_view.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_drop_left_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_drop_right.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_drop_right_view.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_drop_right_inplace.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_expand_envs.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_expand_tabs.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_expand_user.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_extname.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_foreach_lines.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_foreach_word.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_icompare.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_iequals.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_insert.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_insert_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_invert.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_all_in.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_has_any_one.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_alnumul.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_alnum.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_alpha.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_ascii.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_blank.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_digit.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_graph.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_identifier.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_literal_bool.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_literal_false.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_literal_integer.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_literal_real.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_literal_true.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_lower.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_print.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_space.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_upper.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_xdigit.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_capitalize.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_is_title.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_next_char.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_prev_char.cpp)

list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_next_string.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_next_string_range.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_next_string_view.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_prev_string.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_prev_string_range.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_prev_string_view.cpp)

list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_next_eol.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_next_eol_range.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_next_eol_view.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_prev_eol.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_prev_eol_range.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_prev_eol_view.cpp)

list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_ends_with_eol.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_has_eol_suffix.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_eol_suffix.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_remove_eol_suffix.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_remove_eol_suffix_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_remove_eol_suffix_range.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_remove_eol_suffix_view.cpp)

#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_next_regex.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_next_word.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_normpath.cpp)

list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_prefix.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_has_prefix.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_starts_with.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_remove_prefix_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_remove_prefix_view.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_remove_prefix.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_suffix.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_swap_case.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_has_suffix.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_ends_with.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_remove_suffix_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_remove_suffix_view.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_remove_suffix.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_ends_with_spaces.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_starts_with_spaces.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_starts_with_margin.cpp)

list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_prepend.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_prepend_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_repeat.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_search_path.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_simplified.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_simplified_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_simplified_integer.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_simplified_integer_inplace.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_space.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_split_lines.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_split_list.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_split_map.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_split_path.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_split_words.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_take.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_take_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_take_left.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_take_left_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_take_left_view.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_take_right.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_take_right_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_take_right_view.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_take_view.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_to_capitalize.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_to_capitalize_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_to_lower.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_to_title.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_to_upper.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_trim_anywhere.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_trim_anywhere_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_trim_left.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_trim_left_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_trim_left_view.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_trim_right.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_trim_right_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_trim_right_view.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_trim_surrounding.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_trim_surrounding_inplace.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_trim_surrounding_view.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_title.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_translate_invert.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_wildcmp.cpp)
list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_iwildcmp.cpp)

#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_iter_next_string.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_join_list.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_join_map.cpp)
#list(APPEND SOURCES ${CMAKE_CURRENT_LIST_DIR}/test/test_str_join_path.cpp)

list(APPEND QUALITY_OPTIONS -Wall)
list(APPEND QUALITY_OPTIONS -Wextra)
list(APPEND QUALITY_OPTIONS -Werror=return-type)
list(APPEND QUALITY_OPTIONS -Werror=sign-compare)
#list(APPEND QUALITY_OPTIONS -Wno-unused-parameter)

#   Define the building target
add_executable(str_test ${SOURCES})


target_include_directories(str_test PRIVATE include src)
target_compile_options(str_test PRIVATE ${QUALITY_OPTIONS})
